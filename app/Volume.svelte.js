/* src/app/Volume.svelte generated by Svelte v3.46.4 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	run_all,
	safe_not_equal,
	set_input_value,
	space,
	svg_element,
	to_number
} from "../_snowpack/pkg/svelte/internal.js";

function create_fragment(ctx) {
	let div;
	let input;
	let input_min_value;
	let input_max_value;
	let input_step_value;
	let t;
	let svg;
	let path;
	let mounted;
	let dispose;

	return {
		c() {
			div = element("div");
			input = element("input");
			t = space();
			svg = svg_element("svg");
			path = svg_element("path");
			attr(input, "type", "range");
			attr(input, "min", input_min_value = 0);
			attr(input, "max", input_max_value = 1);
			attr(input, "step", input_step_value = 0.05);
			attr(input, "class", "appearance-none h-1 w-auto mr-1 bg-gray-200 rounded");
			attr(path, "fill-rule", "evenodd");
			attr(path, "d", "M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM14.657 2.929a1 1 0 011.414 0A9.972 9.972 0 0119 10a9.972 9.972 0 01-2.929 7.071 1 1 0 01-1.414-1.414A7.971 7.971 0 0017 10c0-2.21-.894-4.208-2.343-5.657a1 1 0 010-1.414zm-2.829 2.828a1 1 0 011.415 0A5.983 5.983 0 0115 10a5.984 5.984 0 01-1.757 4.243 1 1 0 01-1.415-1.415A3.984 3.984 0 0013 10a3.983 3.983 0 00-1.172-2.828 1 1 0 010-1.415z");
			attr(path, "clip-rule", "evenodd");
			attr(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr(svg, "viewBox", "0 0 20 20");
			attr(svg, "fill", "currentColor");
			attr(svg, "class", "w-4 h-4 text-gray-400");
			attr(div, "class", "flex items-center");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, input);
			set_input_value(input, /*volume*/ ctx[0]);
			append(div, t);
			append(div, svg);
			append(svg, path);

			if (!mounted) {
				dispose = [
					listen(input, "change", /*input_change_input_handler*/ ctx[1]),
					listen(input, "input", /*input_change_input_handler*/ ctx[1])
				];

				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*volume*/ 1) {
				set_input_value(input, /*volume*/ ctx[0]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { volume = 0.5 } = $$props;

	function input_change_input_handler() {
		volume = to_number(this.value);
		$$invalidate(0, volume);
	}

	$$self.$$set = $$props => {
		if ('volume' in $$props) $$invalidate(0, volume = $$props.volume);
	};

	return [volume, input_change_input_handler];
}

class Volume extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { volume: 0 });
	}
}

export default Volume;